import matplotlib.pyplot as plt
import numpy as np
import pandas as pd


#importing dataset
df = pd.read_csv('C:\\Users\\15840\\Downloads\\combined vulnerable variables - Sheet1 (2).csv')

#convert dataframe to nparray
bruh = df.to_numpy()

#subtract mean to center the data
meaned = bruh - np.mean(bruh, axis=0)

#calculate covariance matrix
cm = np.cov(meaned, rowvar=False)
#compute eigenvalues and eigenvectors
eigenvalues, eigenvectors = np.linalg.eig(cm)

#sort eigenvalues and eigenvectors in descending order
sorted_eigenvalues = eigenvalues[np.argsort(eigenvalues)[::-1]]
sorted_eigenvectors = eigenvectors[:,np.argsort(eigenvalues)[::-1]]

eigenvector_subset = sorted_eigenvectors[::,0:2]
X_reduced = np.dot(eigenvector_subset.transpose(), meaned.transpose()).transpose()
print("Eigenvalues: ", sorted_eigenvalues)
print("Eigenvectors: \n", sorted_eigenvectors)
print(X_reduced)

#standardize data
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(df)
scaled_data = scaler.transform(df)

#principal component analysis
from sklearn.decomposition import PCA
pca = PCA(n_components=2)
pca.fit(scaled_data)
x_pca = pca.transform(scaled_data)

print(x_pca.shape)
print(scaled_data.shape)


#visualize principal components
plt.scatter(x_pca[:,0], x_pca[:,1], c=df['Park'])
plt.xlabel('First Principal Component')
plt.ylabel('Second Principal Component')
plt.show()




